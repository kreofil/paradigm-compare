#ifndef __Triangle__
#define __Triangle__

//------------------------------------------------------------------------------
// Triangle.h - содержит описание класса треугольника,
// порожденного от базового класса Figure
//------------------------------------------------------------------------------

#include "Figure.h"

//------------------------------------------------------------------------------
// треугольник
class Triangle: public Figure
{
  public:
    int a, b, c; // стороны
    // переопределяем интерфейс класса
    void InData(ifstream &ifst);  // ввод данных из потока
    void Out(ofstream &ofst);    // вывод данных в стандартный поток

    // создание без инициализации.
    Triangle() {} 
};

//------------------------------------------------------------------------------
// Фабрика, обеспечивающая создание треугольников при чтении признака фигуры
class TriangleFactory: public FigureFactory {
public:
    // Конструктор фабрики, устанавливющий признак треугольника (равен 2)
    TriangleFactory():FigureFactory(2) { }
    
    // Переопределение метода Create на создание треугольников.
    Figure* Create(int key) {
        if(key == mark)
            return new Triangle;
        else
            return nullptr;
    }
};
  
#endif
