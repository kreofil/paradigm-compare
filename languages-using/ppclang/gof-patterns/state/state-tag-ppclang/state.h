#ifndef __state__
#define __state__

//==============================================================================
// state.h - Описание состояний и прототипов обобщенных функций,
// связанных с их использованием.
//==============================================================================

//------------------------------------------------------------------------------
// Различные состояния задаются расширяемыми перечислениями
// вместо использования классов
typedef struct State {} <> State;
State + <Start: void;>;     // Начальное состояние
State + <InSelect: void;>;  // Выбор типа фигуры (диалог)
State + <InRect: void;>;    // Ввод сторон прямоугольника
State + <GoodRect: void;>;  // Проверка корректности сторон прямоугольника
State + <InTrian: void;>;   // Ввод сторон треугольника
State + <GoodTrian: void;>; // Проверка корректности сторон треугольника
State + <AddFigure: void;>; // Добавление введенной фигуры в контейнер
State + <OutCont: void;>;   // Вывод содержимого контейнера
State + <Finish: void;>;    // Конечное состояние

//------------------------------------------------------------------------------
// Контекст автомата, обеспечивающий связь всех обрабатываемых данных
struct Context;

//------------------------------------------------------------------------------
// Обобщенная функция обработки состояния
void EvalState<State* state>(struct Context* context);

#endif // __state__

