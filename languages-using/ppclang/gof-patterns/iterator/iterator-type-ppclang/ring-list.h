// list.h
// Объявление структур и  базовых функций, связанных с обработкой абстрактного
// однонаправленного кольцевого списка

#include <stdio.h>
#include "value.h"

//------------------------------------------------------------------------------
// Промежуточный обобщенный узел списка,
// подменяемый на конкретные специализации
typedef struct Node {
  Value* value;
  struct Node* next;
}<> Node;

//------------------------------------------------------------------------------
// Структура, определяющая однонаправленный кольцевой список
typedef struct RingList {
  Node* tail;
  Node* previous;
  Node* current;
} RingList;

//==============================================================================
// Функции для работы со списком

// Начальная инициализация списка
void InitRingList(RingList* list);

// Добавление значения в хвост списка
void AppendRingList(RingList* list, Value* value);

// Удаление элемента из головы списка с его сохранением
Value* DeleteHeadOfRingList(RingList* list);

// Вывод элементов списка в указанный файл, который
// должен быть предварително открыт
void OutRingListValues(FILE* file, RingList* list);

// Удаление всех элементов списка (очистка от данных)
void EmptyRingList(RingList* list);

// Вывод значения указанного элемента, из данного узла
void OutCurrentRingListValue(FILE* file, Value* value);

